void main () {
  var deck = new Deck();
 
//   print(deck);
  
//   deck.printCards();
//    deck.shuffle();
//    deck.printCards();
//   var hand = deck.deal(6);
//   print(hand);
//   deck.printCards();
  var cards = deck.cardsWithSuit('Clubs');
  print(cards);
  
  deck.removeCard("Two", "Clubs");
  deck.printCards();
  
}
// this is a collection of cards
class Deck {
  // collection of 52 playing cards
  List<Card> cards = [];
  
  Deck () {
    //create 52 cards and assign it to the cards field
    List<String> ranks = ["Ace", "Two","Three","Four","Five","Six"];
    List<String> suits = ["Spade","Clubs","Hearts","Diamonds"];
    
    // nested for loop
//     for( int i = 0; i< suits.length; i++) {
//       for(int j =0; j< ranks.length; j++ ){
//         //create a new Card and add it to cards
//         var card = new Card(suits[i], ranks[j]);
//         cards.add(card);
        
//       }
//     }
    for(var suit in suits){
      for(var rank in ranks){
        
        var card = new Card(suit:suit, rank:rank);
        cards.add(card);
        
      }
    }
//     for(int i= 0;i<suits.length; i++){
//       var suit = suits[i];
//     }
  }
  
  void printCards() {
    print(cards);
  }
  
  //randomize ni lekhna milcha
   void shuffle() {
    
    cards.shuffle();
  }
  
  List<Card> deal(int size) {
    
    var hand = cards.sublist(0,size);
    cards = cards.sublist(size);
    print(cards);
    return hand;
  }
  
  
  List<Card> cardsWithSuit( String color) {
    
//     List<Card> matched = [];
//     for(var card in cards) {
//       if(card.suit == color) {
        
//         matched.add(card);
//       }
//     }
    
//     return matched;
  
//   var matched = cards.where( (card) {
    
//     return card.suit == color;
//   });
    //     return matched;

     
     //short tlekhne only for single
   
      return cards.where( (singleCard) =>singleCard.suit ==color).toList();
     
   }
   void removeCard (String rank, String suit) {
    
    cards.removeWhere( (singleCard) => (singleCard.suit ==suit ) && (singleCard.rank == rank));
    
  }
    
  

 //pahila eterable thiyo ahile list ma chha []. to list le etrate misisng lai lyacubah
  
  

  
  
  @override
  String toString() {
    return "It is a deck";
  }
  
  
}
class Card {
  // represents the rank such as Ace, Queen, Jack
  String rank;
  // represents the suit such as Spade, Club
  String suit;
  
  Card({this.suit, this.rank});
  
  @override
 String toString(){
   return "$rank of $suit";
  }
  
  
}